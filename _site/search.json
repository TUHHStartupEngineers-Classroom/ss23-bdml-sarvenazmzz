[
  {
    "objectID": "content/01_journal/01_tidyverse.html",
    "href": "content/01_journal/01_tidyverse.html",
    "title": "Tidyverse",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh.\nThis is a .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "content/01_journal/01_tidyverse.html#header-2",
    "href": "content/01_journal/01_tidyverse.html#header-2",
    "title": "Tidyverse",
    "section": "\n2.1 Header 2",
    "text": "2.1 Header 2\nHeader 3\nHeader 4\nHeader 5\nHeader 6"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html",
    "href": "content/01_journal/02_data_acquisition.html",
    "title": "Data Acquisition",
    "section": "",
    "text": "library(ggplot2)\nlibrary(ggrepel)\nlibrary(tidyverse)\n\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ lubridate 1.9.2     ✔ tibble    3.2.1\n#> ✔ purrr     1.0.1     ✔ tidyr     1.3.0\n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(workflows)\nlibrary(broom.mixed)\nlibrary(parsnip)\nlibrary(recipes)\n\n#> \n#> Attaching package: 'recipes'\n#> \n#> The following object is masked from 'package:stringr':\n#> \n#>     fixed\n#> \n#> The following object is masked from 'package:stats':\n#> \n#>     step\n\nlibrary(rsample)\nlibrary(yardstick)\n\n#> \n#> Attaching package: 'yardstick'\n#> \n#> The following object is masked from 'package:readr':\n#> \n#>     spec\n\nlibrary(rpart.plot)\n\n#> Loading required package: rpart\n\n# Read the data\nbike_features_tbl <- readRDS(\"C:/Users/mosta/Desktop/Business Decisions with Machine Learning/2/bike_features_tbl.rds\")\n\n# Remove missing values in the selected columns\nbike_features_tbl <- bike_features_tbl\n\n# Create a recipe\nbike_recipe <- recipe(price ~ category_2 + frame_material, data = bike_features_tbl) %>%\n  step_dummy(all_nominal(), -all_outcomes()) %>%\n  step_zv(all_predictors())\n\n# Prepare the recipe\nbike_recipe_prep <- prep(bike_recipe)\n\n# Split the data into training and test sets\nset.seed(1113)\nsplit_obj <- initial_split(bike_features_tbl, prop = 0.8, strata = \"category_2\")\ntrain_tbl <- training(split_obj)\ntest_tbl <- testing(split_obj)\n\n# Create a workflow for Model 01\nwf_model_01 <- workflow() %>%\n  add_model(linear_reg(mode = \"regression\") %>% set_engine(\"lm\")) %>%\n  add_recipe(bike_recipe_prep)\n\n# Fit Model 01 using the workflow\nmodel_01_linear_lm_simple <- fit(wf_model_01, data = train_tbl)\n\n# Make predictions on the test data for Model 01\npredictions_model_01 <- predict(model_01_linear_lm_simple, new_data = test_tbl) %>%\n  bind_cols(data.frame(price = test_tbl$price, category_2 = as.character(test_tbl$category_2)))\n\n#> Warning: There are new levels in a factor: E-Road\n\n# Calculate the RMSE manually for Model 01\nrmse_value_model_01 <- sqrt(mean((predictions_model_01$price - predictions_model_01$.pred)^2))\n\n# View the calculated RMSE for Model 01\nprint(rmse_value_model_01)\n\n#> [1] NA\n\n# Extract and tidy the coefficients for Model 01\ncoefs_model_01 <- broom.mixed::tidy(model_01_linear_lm_simple$fit$fit) %>%\n  arrange(p.value) %>%\n  mutate(term = as_factor(term) %>% fct_rev())\n\n# Plot the feature importance for Model 01\nggplot(coefs_model_01, aes(x = estimate, y = term)) +\n  geom_point(color = \"#2dc6d6\", size = 3) +\n  geom_label(aes(label = scales::dollar(coefs_model_01$estimate, accuracy = 1, suffix = \" €\", prefix = \"\")),\n             size = 3, fill = \"#272A36\", color = \"white\", hjust = 0) +\n  scale_x_continuous(labels = scales::dollar_format(suffix = \" €\", prefix = \"\")) +\n  labs(title = \"Linear Regression: Feature Importance\",\n       subtitle = \"Model 01: Simple lm Model\")\n\n#> Warning: Use of `coefs_model_01$estimate` is discouraged.\n#> ℹ Use `estimate` instead.\n\n\n\n\n\n\n\n# Define the helper function to calculate metrics\ncalc_metrics <- function(model, new_data = test_tbl) {\n  model %>%\n    predict(new_data = new_data) %>%\n    bind_cols(new_data %>% select(price)) %>%\n    yardstick::metrics(truth = price, estimate = .pred)\n}\n\n# Calculate the metrics using the helper function for Model 01\nmetrics_model_01 <- model_01_linear_lm_simple %>% calc_metrics(test_tbl)\n\n#> Warning: There are new levels in a factor: E-Road\n\n# Print the calculated metrics for Model 01\nprint(metrics_model_01)\n\n#> # A tibble: 3 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard    1053.   \n#> 2 rsq     standard       0.501\n#> 3 mae     standard     768.\n\n# Create a workflow for Model 02\nwf_model_02 <- workflow() %>%\n  add_model(linear_reg(mode = \"regression\") %>% set_engine(\"lm\")) %>%\n  add_recipe(bike_recipe_prep)\n\n# Fit Model 02 using the workflow\nmodel_02_linear_lm_complex <- fit(wf_model_02, data = train_tbl)\n\n# Make predictions on the test data for Model 02\npredictions_model_02 <- predict(model_02_linear_lm_complex, new_data = test_tbl) %>%\n  bind_cols(data.frame(price = test_tbl$price, category_2 = as.character(test_tbl$category_2)))\n\n#> Warning: There are new levels in a factor: E-Road\n\n# Calculate the RMSE manually for Model 02\nrmse_value_model_02 <- sqrt(mean((predictions_model_02$price - predictions_model_02$.pred)^2))\n\n# View the calculated RMSE for Model 02\nprint(rmse_value_model_02)\n\n#> [1] NA\n\n# Extract and tidy the coefficients for Model 02\ncoefs_model_02 <- tidy(model_02_linear_lm_complex$fit$fit) %>%\n  arrange(p.value) %>%\n  mutate(term = as_factor(term) %>% fct_rev())\n\n# Plot the feature importance for Model 02\nggplot(coefs_model_02, aes(x = estimate, y = term)) +\n  geom_point(color = \"#2dc6d6\", size = 3) +\n  ggrepel::geom_label_repel(aes(label = scales::dollar(estimate, accuracy = 1, suffix = \" €\", prefix = \"\")),\n                            size = 4, fill = \"#272A36\", color = \"white\") +\n  scale_x_continuous(labels = scales::dollar_format(suffix = \" €\", prefix = \"\")) +\n  labs(title = \"Linear Regression: Feature Importance\",\n       subtitle = \"Model 02: Complex lm Model\")\n\n\n\n\n\n\n# Calculate the metrics using the helper function for Model 02\nmetrics_model_02 <- model_02_linear_lm_complex %>% calc_metrics(test_tbl)\n\n#> Warning: There are new levels in a factor: E-Road\n\n# Print the calculated metrics for Model 02\nprint(metrics_model_02)\n\n#> # A tibble: 3 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard    1053.   \n#> 2 rsq     standard       0.501\n#> 3 mae     standard     768.\n\n# 5.0 TESTING THE ALGORITHMS OUT ----\ng1 <- bike_features_tbl %>% \n  mutate(category_2 = as.factor(category_2) %>% \n           fct_reorder(price)) %>% \n  \n  ggplot(aes(category_2, price)) +\n  geom_violin() +\n  geom_jitter(width = 0.1, alpha = 0.5, color = \"#2dc6d6\") +\n  coord_flip() +\n  facet_wrap(~ frame_material) +\n  scale_y_continuous(labels = scales::dollar_format()) +\n  labs(\n    title = \"Unit Price for Each Model\",\n    y = \"\", x = \"Category 2\"\n  )\n\n# Print the plot\nprint(g1)\n\n#> Warning: Groups with fewer than two data points have been dropped.\n\n\n#> Warning: Groups with fewer than two data points have been dropped.\n#> Groups with fewer than two data points have been dropped.\n\n\n\n\n\n\n\n# 5.1 NEW MODEL ----\n\nnew_cross_country <- tibble(\n  model = \"Exceed AL SL new\",\n  category_2 = \"Cross-Country\",\n  frame_material = \"aluminium\",\n  shimano_dura_ace = 0,\n  shimano_ultegra = 0,\n  shimano_105 = 0,\n  shimano_tiagra = 0,\n  Shimano_sora = 0,\n  shimano_deore = 0,\n  shimano_slx = 0,\n  shimano_grx = 0,\n  Shimano_xt = 1,\n  Shimano_xtr = 0,\n  Shimano_saint = 0,\n  SRAM_red = 0,\n  SRAM_force = 0,\n  SRAM_rival = 0,\n  SRAM_apex = 0,\n  SRAM_xx1 = 0,\n  SRAM_x01 = 0,\n  SRAM_gx = 0,\n  SRAM_nx = 0,\n  SRAM_sx = 0,\n  Campagnolo_potenza = 0,\n  Campagnolo_super_record = 0,\n  shimano_nexus = 0,\n  shimano_alfine = 0\n) \n\nnew_cross_country\n\n\n\n  \n\n\n# Linear Methods ----\n\n# Iteration\nmodels_tbl <- tibble(\n  model_id = str_c(\"Model 0\", 1:2),\n  model = list(\n    model_01_linear_lm_simple,\n    model_02_linear_lm_complex\n  )\n)\n\nmodels_tbl\n\n\n\n  \n\n\n# Add Predictions\npredictions_new_cross_country_tbl <- models_tbl %>%\n  mutate(predictions = map(model, predict, new_data = new_cross_country)) %>%\n  unnest(predictions) %>%\n  mutate(category_2 = \"Cross-Country\") %>%\n  left_join(new_cross_country, by = \"category_2\")\n\npredictions_new_cross_country_tbl\n\n\n\n  \n\n\n# Update plot\ng2 <- g1 +\n  geom_point(aes(y = .pred), color = \"red\", alpha = 0.5,\n             data = predictions_new_cross_country_tbl) +\n  ggrepel::geom_text_repel(aes(label = model_id, y = .pred),\n                           size = 3,\n                           data = predictions_new_cross_country_tbl)\nprint(g2)\n\n#> Warning: Groups with fewer than two data points have been dropped.\n#> Groups with fewer than two data points have been dropped.\n#> Groups with fewer than two data points have been dropped."
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html",
    "href": "content/01_journal/04_data_visualization.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/02_notes/05_class_notes.html",
    "href": "content/02_notes/05_class_notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "IMPORTANT: You can delete everything in here and start fresh. You might want to start by not deleting anything above this line until you know what that stuff is doing.\nThis is an .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header."
  },
  {
    "objectID": "content/03_other/06_links.html",
    "href": "content/03_other/06_links.html",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual .\n\n\n\n\nGoogle is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "This is a template example for lab journaling. Students in the data science courses at the Institute of Entrepreneurship will use this template to learn R for business analytics. Students can replace this text as they wish."
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "My Lab Journal",
    "section": "How to use",
    "text": "How to use\n\nAccept the assignment and get your own github repo.\nBlog/journal what you are doing in R, by editing the .qmd files.\nSee the links page for lots of helpful links on learning R.\nChange everything to make it your own.\nMake sure to render you website everytime before you want to upload changes"
  }
]